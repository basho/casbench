%%
%% Autogenerated by Thrift
%%
%% DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
%%

-module(cassandra_types).

-include("cassandra_types.hrl").

-export([struct_info/1]).
%% struct column

% -record(column, {name, value, timestamp}).

struct_info('column') ->
  {struct, [{1, string},
  {2, string},
  {3, i64}]}
;

%% struct superColumn

% -record(superColumn, {name, columns}).

struct_info('superColumn') ->
  {struct, [{1, string},
  {2, {list, {struct, {'cassandra_types', 'column'}}}}]}
;

%% struct columnOrSuperColumn

% -record(columnOrSuperColumn, {column, super_column}).

struct_info('columnOrSuperColumn') ->
  {struct, [{1, {struct, {'cassandra_types', 'column'}}},
  {2, {struct, {'cassandra_types', 'superColumn'}}}]}
;

%% struct notFoundException

% -record(notFoundException, {}).

struct_info('notFoundException') ->
  {struct, []}
;

%% struct invalidRequestException

% -record(invalidRequestException, {why}).

struct_info('invalidRequestException') ->
  {struct, [{1, string}]}
;

%% struct unavailableException

% -record(unavailableException, {}).

struct_info('unavailableException') ->
  {struct, []}
;

%% struct timedOutException

% -record(timedOutException, {}).

struct_info('timedOutException') ->
  {struct, []}
;

%% struct columnParent

% -record(columnParent, {column_family, super_column}).

struct_info('columnParent') ->
  {struct, [{3, string},
  {4, string}]}
;

%% struct columnPath

% -record(columnPath, {column_family, super_column, column}).

struct_info('columnPath') ->
  {struct, [{3, string},
  {4, string},
  {5, string}]}
;

%% struct sliceRange

% -record(sliceRange, {start, finish, reversed, count}).

struct_info('sliceRange') ->
  {struct, [{1, string},
  {2, string},
  {3, bool},
  {4, i32}]}
;

%% struct slicePredicate

% -record(slicePredicate, {column_names, slice_range}).

struct_info('slicePredicate') ->
  {struct, [{1, {list, string}},
  {2, {struct, {'cassandra_types', 'sliceRange'}}}]}
;

%% struct keySlice

% -record(keySlice, {key, columns}).

struct_info('keySlice') ->
  {struct, [{1, string},
  {2, {list, {struct, {'cassandra_types', 'columnOrSuperColumn'}}}}]}
;

struct_info('i am a dummy struct') -> undefined.
